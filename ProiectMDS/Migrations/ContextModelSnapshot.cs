// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMDS.Contexts;

namespace ProiectMDS.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectMDS.Models.Apartment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<int>("maxPersons");

                    b.Property<int>("numberOfRooms");

                    b.Property<int>("pricePerNight");

                    b.Property<int>("propertyId");

                    b.HasKey("id");

                    b.HasIndex("propertyId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("ProiectMDS.Models.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cityName");

                    b.HasKey("id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ProiectMDS.Models.Favourite", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("propertyId");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.HasIndex("propertyId");

                    b.HasIndex("userId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("ProiectMDS.Models.Owner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bankAccount");

                    b.Property<DateTime>("birthDate");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<string>("sex");

                    b.HasKey("id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ProiectMDS.Models.Photo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("apartmentId");

                    b.Property<string>("path");

                    b.HasKey("id");

                    b.HasIndex("apartmentId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("ProiectMDS.Models.Property", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cityId");

                    b.Property<string>("description");

                    b.Property<string>("name");

                    b.Property<int>("numberOfStars");

                    b.Property<int>("ownerId");

                    b.Property<string>("photo");

                    b.Property<string>("street");

                    b.Property<int>("streetNumber");

                    b.Property<string>("type");

                    b.HasKey("id");

                    b.HasIndex("cityId");

                    b.HasIndex("ownerId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ProiectMDS.Models.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("apartmentId");

                    b.Property<DateTime>("checkIn");

                    b.Property<DateTime>("checkOut");

                    b.Property<int>("price");

                    b.Property<string>("review");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.HasIndex("apartmentId");

                    b.HasIndex("userId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ProiectMDS.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bankAccount");

                    b.Property<DateTime>("birthDate");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<string>("sex");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProiectMDS.Models.Apartment", b =>
                {
                    b.HasOne("ProiectMDS.Models.Property", "property")
                        .WithMany("apartment")
                        .HasForeignKey("propertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Favourite", b =>
                {
                    b.HasOne("ProiectMDS.Models.Property", "property")
                        .WithMany()
                        .HasForeignKey("propertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Photo", b =>
                {
                    b.HasOne("ProiectMDS.Models.Apartment", "apartment")
                        .WithMany()
                        .HasForeignKey("apartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Property", b =>
                {
                    b.HasOne("ProiectMDS.Models.City", "city")
                        .WithMany()
                        .HasForeignKey("cityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Owner", "owner")
                        .WithMany("property")
                        .HasForeignKey("ownerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Reservation", b =>
                {
                    b.HasOne("ProiectMDS.Models.Apartment", "apartment")
                        .WithMany("reservation")
                        .HasForeignKey("apartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.User", "user")
                        .WithMany("reservation")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
